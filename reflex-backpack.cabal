Name: reflex-backpack
Version: 0.5.0
Synopsis: Higher-order Functional Reactive Programming with Backpack
Description: Reflex is a high-performance, deterministic, higher-order Functional Reactive Programming system
License: BSD3
License-file: LICENSE
Author: Edward Z. Yang
Maintainer: ezyang@cs.stanford.edu
Stability: Experimental
Category: FRP
Build-type: Simple
Cabal-version: >=1.23

flag use-reflex-optimizer
  description: Use the GHC plugin Reflex.Optimizer on some of the modules in the package.  This is still experimental.
  default: False
  manual: True

flag use-template-haskell
  description: Use template haskell to generate lenses
  default: True
  manual: True

flag expose-all-unfoldings
  description: Build the library with -fexpose-all-unfoldings which can help client code specialize better
  default: False
  manual: True

flag debug-trace-events
  description: add instrumentation that outputs the stack trace of the definition of an event whenever it is subscribed to. Warning: It is very slow!
  default: False
  manual: True

library
  build-depends: indef, reflex, spider, host
  mixins:
    spider (Reflex.Spider.Backpack as Reflex.Sig,
            Reflex.Spider.Backpack as Reflex.Host.Sig),
    reflex (Data.Functor.Misc, Data.WeakBag, Reflex.Patch,
            Reflex.FunctorMaybe, Reflex.TriggerEvent.Class,
            Reflex.PerformEvent.Base, Reflex.Spider, Reflex.Spider.Internal)
  reexported-modules:
    Data.Functor.Misc,
    Data.WeakBag,
    -- Reflex,
    -- Reflex.Class,
    Reflex.Basics,
    Reflex.EventWriter,
    Reflex.Dynamic,
    Reflex.Dynamic.Uniq,
    Reflex.DynamicWriter,
    Reflex.FunctorMaybe,
    -- Reflex.Host.Class,
    Reflex.Host.Basics,
    Reflex.Patch,
    Reflex.TriggerEvent.Base,
    Reflex.TriggerEvent.Class,
    Reflex.PerformEvent.Base,
    Reflex.PerformEvent.Class,
    Reflex.PostBuild.Base,
    Reflex.PostBuild.Class,
    Reflex.Requester.Base,
    Reflex.Requester.Class,
    Reflex.Spider,
    Reflex.Spider.Internal

library host
  build-depends:
    reflex,
    indef,
    MemoTrie == 0.6.*,
    base >= 4.7 && < 4.11,
    bifunctors >= 5.2 && < 5.5,
    containers == 0.5.*,
    data-default >= 0.5 && < 0.8,
    dependent-map >= 0.2.4 && < 0.3,
    exception-transformers == 0.4.*,
    lens >= 4.7 && < 5,
    monad-control >= 1.0.1 && < 1.1,
    mtl >= 2.1 && < 2.3,
    prim-uniq >= 0.1.0.1 && < 0.2,
    primitive >= 0.5 && < 0.7,
    ref-tf == 0.4.*,
    reflection == 2.1.*,
    semigroupoids >= 4.0 && < 6,
    semigroups >= 0.16 && < 0.19,
    stm == 2.4.*,
    syb >= 0.5 && < 0.7,
    these >= 0.4 && < 0.8,
    transformers >= 0.2,
    transformers-compat >= 0.3
  hs-source-dirs: host
  signatures: Reflex.Host.Sig
  exposed-modules:
    Reflex.Host.Basics
    Reflex.EventWriter
    Reflex.DynamicWriter
    Reflex.Requester.Base
    Reflex.PostBuild.Base
    Reflex.TriggerEvent.Base
  mixins:
    reflex hiding (Reflex.Dynamic, Reflex.Dynamic.Uniq, Reflex.Requester.Class, Reflex.PostBuild.Class, Reflex.PerformEvent.Class),
    indef

  ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2
  ghc-prof-options: -fprof-auto

  if flag(debug-trace-events)
    cpp-options: -DDEBUG_TRACE_EVENTS
    build-depends: bytestring

  if flag(use-reflex-optimizer)
    cpp-options: -DUSE_REFLEX_OPTIMIZER

  if flag(use-template-haskell)
    cpp-options: -DUSE_TEMPLATE_HASKELL
    build-depends:
      dependent-sum >= 0.3 && < 0.5,
      haskell-src-exts >= 1.16 && < 1.18,
      haskell-src-meta == 0.6.*,
      template-haskell >= 2.9 && < 2.12
    exposed-modules:
      Reflex.Dynamic.TH
    other-extensions: TemplateHaskell
  else
    build-depends:
      dependent-sum == 0.4.*

  if flag(expose-all-unfoldings)
    ghc-options: -fexpose-all-unfoldings

library indef
  build-depends:
    reflex,
    MemoTrie == 0.6.*,
    base >= 4.7 && < 4.11,
    bifunctors >= 5.2 && < 5.5,
    containers == 0.5.*,
    data-default >= 0.5 && < 0.8,
    dependent-map >= 0.2.4 && < 0.3,
    exception-transformers == 0.4.*,
    lens >= 4.7 && < 5,
    monad-control >= 1.0.1 && < 1.1,
    mtl >= 2.1 && < 2.3,
    prim-uniq >= 0.1.0.1 && < 0.2,
    primitive >= 0.5 && < 0.7,
    ref-tf == 0.4.*,
    reflection == 2.1.*,
    semigroupoids >= 4.0 && < 6,
    semigroups >= 0.16 && < 0.19,
    stm == 2.4.*,
    syb >= 0.5 && < 0.7,
    these >= 0.4 && < 0.8,
    transformers >= 0.2,
    transformers-compat >= 0.3
  signatures:
    Reflex.Sig
  exposed-modules:
    Reflex.Basics
    Reflex.Dynamic
    Reflex.Dynamic.Uniq
    Reflex.Requester.Class
    Reflex.PostBuild.Class
    Reflex.PerformEvent.Class
  hs-source-dirs: indef
  mixins:
    reflex hiding (Reflex.Dynamic)

  ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2
  ghc-prof-options: -fprof-auto

  if flag(debug-trace-events)
    cpp-options: -DDEBUG_TRACE_EVENTS
    build-depends: bytestring

  if flag(use-reflex-optimizer)
    cpp-options: -DUSE_REFLEX_OPTIMIZER

  if flag(use-template-haskell)
    cpp-options: -DUSE_TEMPLATE_HASKELL
    build-depends:
      dependent-sum >= 0.3 && < 0.5,
      haskell-src-exts >= 1.16 && < 1.18,
      haskell-src-meta == 0.6.*,
      template-haskell >= 2.9 && < 2.12
    exposed-modules:
      Reflex.Dynamic.TH
    other-extensions: TemplateHaskell
  else
    build-depends:
      dependent-sum == 0.4.*

  if flag(expose-all-unfoldings)
    ghc-options: -fexpose-all-unfoldings

library spider
  build-depends:
    reflex,
    MemoTrie == 0.6.*,
    base >= 4.7 && < 4.11,
    bifunctors >= 5.2 && < 5.5,
    containers == 0.5.*,
    data-default >= 0.5 && < 0.8,
    dependent-map >= 0.2.4 && < 0.3,
    exception-transformers == 0.4.*,
    lens >= 4.7 && < 5,
    monad-control >= 1.0.1 && < 1.1,
    mtl >= 2.1 && < 2.3,
    prim-uniq >= 0.1.0.1 && < 0.2,
    primitive >= 0.5 && < 0.7,
    ref-tf == 0.4.*,
    reflection == 2.1.*,
    semigroupoids >= 4.0 && < 6,
    semigroups >= 0.16 && < 0.19,
    stm == 2.4.*,
    syb >= 0.5 && < 0.7,
    these >= 0.4 && < 0.8,
    transformers >= 0.2,
    transformers-compat >= 0.3
  exposed-modules:
    Reflex.Spider.Backpack

  hs-source-dirs: src

  ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2
  ghc-prof-options: -fprof-auto

  if flag(debug-trace-events)
    cpp-options: -DDEBUG_TRACE_EVENTS
    build-depends: bytestring

  if flag(use-reflex-optimizer)
    cpp-options: -DUSE_REFLEX_OPTIMIZER

  if flag(use-template-haskell)
    cpp-options: -DUSE_TEMPLATE_HASKELL
    build-depends:
      dependent-sum >= 0.3 && < 0.5,
      haskell-src-exts >= 1.16 && < 1.18,
      haskell-src-meta == 0.6.*,
      template-haskell >= 2.9 && < 2.12
    exposed-modules:
      Reflex.Dynamic.TH
    other-extensions: TemplateHaskell
  else
    build-depends:
      dependent-sum == 0.4.*

  if flag(expose-all-unfoldings)
    ghc-options: -fexpose-all-unfoldings
